#! /usr/bin/env butt

use text/config
use data/hash


filter_sample_input='# A comment

# An empty line above and an empty comment below.
#
# An empty line *with* a space below
 '

test_filter () {
    assertSame "" "$(config_filter_unneeded <<< "$filter_sample_input")"
}


filter_cchar_input='; Semicolons as delimiters'

test_filter_commentchar () {
    assertSame "" "$(config_filter_unneeded ";" <<< "$filter_cchar_input")"
}



keyval_input='one=1
two = 2
  three  = 3  '

test_keyval ()
{
    local h=$(hash_new)
    config_keyval $h <<< "$keyval_input"
    assertSame 1 $(hash_get $h one)
    assertSame 2 $(hash_get $h two)
    assertSame 3 $(hash_get $h three)
    hash_clear $h
}



keyval_cchar_input='; A comments
one = 1
 two= 2
  ; This is another comment
three =3
four = 4
'

test_keyval_commentchar ()
{
    local h=$(hash_new)
    config_keyval $h '=' ';' <<< "$keyval_cchar_input"
    assertSame 1 $(hash_get $h one)
    assertSame 2 $(hash_get $h two)
    assertSame 3 $(hash_get $h three)
    assertSame 4 $(hash_get $h four)
    hash_clear $h
}


keyval_sep_input='one: 1
two  : 2
three :3'

test_keyval_separator ()
{
    local h=$(hash_new)
    config_keyval $h ':' <<< "$keyval_sep_input"
    assertSame 1 $(hash_get $h one)
    assertSame 2 $(hash_get $h two)
    assertSame 3 $(hash_get $h three)
    hash_clear $h
}


keyval_sep_cchar_input='; Comment
one/1
two/2
three/3'

test_keyval_sep_cchr ()
{
    local h=$(hash_new)
    config_keyval $h '/' ';' <<< "$keyval_sep_cchar_input"
    assertSame 1 $(hash_get $h one)
    assertSame 2 $(hash_get $h two)
    assertSame 3 $(hash_get $h three)
    hash_clear $h
}


chained_input='[ALL]
foo=Fallback Foo
[barsect]
bar=Section Bar
[foosect]
foo=Section Foo
'

test_ini_chained ()
{
    local h=$(hash_new)
    config_ini $h <<< "$chained_input"
    assertSame 'Fallback Foo' "$(config_ini_get_chained $h barsect ALL foo '-')"
    assertSame 'Section Bar'  "$(config_ini_get_chained $h barsect ALL bar '-')"
    assertSame 'Section Foo'  "$(config_ini_get_chained $h foosect ALL foo '-')"
    assertSame '-'            "$(config_ini_get_chained $h foosect ALL bar '-')"
    config_ini_clear $h
}

ini_input='[s1]
one=1
two=2
[s2]
one=a
two=b
'

test_ini ()
{
    local h=$(hash_new)
    config_ini $h <<< "$ini_input"
    assertSame 1 $(config_ini_get $h s1 one)
    assertSame 2 $(config_ini_get $h s1 two)
    assertSame a $(config_ini_get $h s2 one)
    assertSame b $(config_ini_get $h s2 two)
    hash_clear $(config_ini_get $h s1)
    hash_clear $(config_ini_get $h s2)
    hash_clear $h
}

