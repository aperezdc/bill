#! /usr/bin/env bill

use text/template

need fakeroot || die "Command 'fakeroot' not found (apt-get install fakeroot)"
need dpkg-deb || die "Command 'dpkg-deb' not found (Not a Debian system?)"
need bash     || die "Command 'bash' not found (Definitely you WILL need it)"
need gzip     || die "Command 'gzip' not found (You want it, man, yeah!)"


build_count ()
{
    local c=0
    [ -r ".bill.deb.count" ] && c=$(< ".bill.deb.count")

    (( c++ ))
    echo "$c" > ".bill.deb.count" 2> /dev/null
    echo "$c"
}


[ "$1" ] && deb_count=$1 || deb_count=$(build_count)

bash_path=$(which bash)
deb_version="${BILL_VERSION}-${deb_count}"
deb_name="bill_${deb_version}_all"
bash_scripts=( bill )
bill_scripts=( unbill butt billetd )


make_clean ()
{
    if [ -d "$deb_name" ]
    then
        echo "Cleaning up $deb_name..."
        rm -rf "$deb_name"
    fi
}


copy_files ()
{
    echo -n "Creating target '$deb_name' [ "
    mkdir -p "$deb_name/DEBIAN"
    mkdir -p "$deb_name/usr/bin"
    mkdir -p "$deb_name/usr/lib/bill"
    echo -n "dirs "

    local name
    local gzip_files=(
        changelog.Debian
        README
    )

    for name in "${bash_scripts[@]}" ; do
        cp "scripts/$name" "$deb_name/usr/bin"
        chmod +x "$deb_name/usr/bin/$name"
    done
    for name in "${bill_scripts[@]}" ; do
        cp "scripts/$name" "$deb_name/usr/bin"
        chmod +x "$deb_name/usr/bin/$name"
    done
    echo -n "scripts "

    cp -R lib/* "$deb_name/usr/lib/bill/"
    echo -n "lib "

    mkdir -p "$deb_name/usr/share/doc/bill"
    cp -R examples doc/* "$deb_name/usr/share/doc/bill"

    # Remove garbage left out from running the bURL example
    rm -f  "$deb_name/usr/share/doc/bill/examples/billet/burl/.setup"
    rm -fr "$deb_name/usr/share/doc/bill/examples/billet/burl/data"

    cp README debian/copyright "$deb_name/usr/share/doc/bill"
    cp debian/changelog "$deb_name/usr/share/doc/bill/changelog.Debian"
    for name in "${gzip_files[@]}" ; do
        gzip --best "$deb_name/usr/share/doc/bill/$name"
    done
    gzip --best "$deb_name/usr/share/doc/bill"/*.txt
    gzip --best "$deb_name/usr/share/doc/bill/lib"/*/*.txt
    echo -n "doc "

    mkdir -p "$deb_name/usr/share/man/man1"
    for name in doc/*.1 ; do
        cp "$name" "$deb_name/usr/share/man/man1"
    done
    gzip --best "$deb_name/usr/share/man/man1"/*.1
    rm "$deb_name/usr/share/doc/bill"/*.1
    rm "$deb_name/usr/share/doc/bill"/*.1.rst
    echo "man ]"
}


adjust_shebang ()
{
    local name

    echo "Setting interpreter '$bash_path'..."
    for name in "${bash_scripts[@]}"
    do
        sed -i -e "1s,.*,#! $bash_path," "$deb_name/usr/bin/$name"
        echo "  $deb_name/usr/bin/$name"
    done
}


add_control_files ()
{
    var_version=$deb_version \
        template_expand < debian/control.in > "$deb_name/DEBIAN/control"
}


make_deb ()
{
    fakeroot dpkg-deb --build "$deb_name"
}


make_clean
copy_files
adjust_shebang
add_control_files
make_deb
make_clean

